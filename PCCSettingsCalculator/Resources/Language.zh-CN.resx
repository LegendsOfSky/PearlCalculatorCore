<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AAPressKey" xml:space="preserve">
    <value>请查看下方的字符画并按下任意键。</value>
  </data>
  <data name="Caution" xml:space="preserve">
    <value>请确保您可以在同一行中显示所有的符号(=)。</value>
  </data>
  <data name="Chamber" xml:space="preserve">
    <value>请输入珍珠炮炮膛中心的座标 : </value>
  </data>
  <data name="ChamberParameter" xml:space="preserve">
    <value>珍珠炮炮膛中心座标</value>
  </data>
  <data name="ChangeParameter" xml:space="preserve">
    <value>请指定您想要修改的数值。</value>
  </data>
  <data name="ConfirmSave" xml:space="preserve">
    <value>请问您是否希望将此设定保存为settings.json？ (Y/N)</value>
  </data>
  <data name="CorfirmParameter" xml:space="preserve">
    <value>请确认以上数值是否正确。 (Y/N)</value>
  </data>
  <data name="FileSaved" xml:space="preserve">
    <value>文件已保存。</value>
  </data>
  <data name="Language" xml:space="preserve">
    <value>语言 : 中文 - 简体(中国)</value>
  </data>
  <data name="MaxTNT" xml:space="preserve">
    <value>请输入单边最大可复制的TNT当量 : </value>
  </data>
  <data name="MaxTNTParamater" xml:space="preserve">
    <value>单边最大可复制的TNT当量</value>
  </data>
  <data name="NorthEastTNT" xml:space="preserve">
    <value>请输入东北方TNT的座标 : </value>
  </data>
  <data name="NorthEastTNTParameter" xml:space="preserve">
    <value>东北方的TNT座标</value>
  </data>
  <data name="NorthWestTNT" xml:space="preserve">
    <value>请输入西北方TNT的座标 : </value>
  </data>
  <data name="NorthWestTNTParameter" xml:space="preserve">
    <value>西北方的TNT座标</value>
  </data>
  <data name="Note0" xml:space="preserve">
    <value>请时刻记得，</value>
  </data>
  <data name="Note1" xml:space="preserve">
    <value>这个软件所产生的设定档可能会轻微丢失精度，可能会导致后续的计算结果带有误差。</value>
  </data>
  <data name="Note2" xml:space="preserve">
    <value />
  </data>
  <data name="NoteHeader" xml:space="preserve">
    <value>备注 : </value>
  </data>
  <data name="Parameter0" xml:space="preserve">
    <value>1) 珍珠炮炮膛中心的座标 : </value>
  </data>
  <data name="Parameter1" xml:space="preserve">
    <value>2) 珍珠的座标 : </value>
  </data>
  <data name="Parameter2" xml:space="preserve">
    <value>3) 珍珠的动量 : </value>
  </data>
  <data name="Parameter3" xml:space="preserve">
    <value>4) 西北方的TNT座标 : </value>
  </data>
  <data name="Parameter4" xml:space="preserve">
    <value>5) 东北方的TNT座标 : </value>
  </data>
  <data name="Parameter5" xml:space="preserve">
    <value>6) 西南方的TNT座标 : </value>
  </data>
  <data name="Parameter6" xml:space="preserve">
    <value>7) 东南方的TNT座标 : </value>
  </data>
  <data name="Parameter7" xml:space="preserve">
    <value>8) 单边最大可复制的TNT当量 : </value>
  </data>
  <data name="Parameter8" xml:space="preserve">
    <value>9) 珍珠炮红色阵列复制出来的TNT于膛室的方向 : </value>
  </data>
  <data name="ParameterHeader" xml:space="preserve">
    <value>以下是您所输入的参数</value>
  </data>
  <data name="PearlCoordinate" xml:space="preserve">
    <value>请输入珍珠的座标 : </value>
  </data>
  <data name="PearlCoordinateParameter" xml:space="preserve">
    <value>珍珠的座标</value>
  </data>
  <data name="PearlMotion" xml:space="preserve">
    <value>请输入珍珠的动量 : </value>
  </data>
  <data name="PearlMotionParameter" xml:space="preserve">
    <value>珍珠的动量</value>
  </data>
  <data name="PressKey" xml:space="preserve">
    <value>请按下任意键。</value>
  </data>
  <data name="PressKeyExist" xml:space="preserve">
    <value>请按下任意键以离开。</value>
  </data>
  <data name="Separate" xml:space="preserve">
    <value>---------------------------------------------------  分  隔  线  ----------------------------------------------------</value>
  </data>
  <data name="Setting0" xml:space="preserve">
    <value>1) 单边最大可复制的TNT当量 : </value>
  </data>
  <data name="Setting1" xml:space="preserve">
    <value>2) 西北方的TNT座标 : </value>
  </data>
  <data name="Setting2" xml:space="preserve">
    <value>3) 东北方的TNT座标 : </value>
  </data>
  <data name="Setting3" xml:space="preserve">
    <value>4) 西南方TNT的座标 : </value>
  </data>
  <data name="Setting4" xml:space="preserve">
    <value>5) 东南方TNT的座标 : </value>
  </data>
  <data name="Setting5" xml:space="preserve">
    <value>6) 珍珠的高度 : </value>
  </data>
  <data name="Setting6" xml:space="preserve">
    <value>7) 珍珠的动量 : </value>
  </data>
  <data name="Setting7" xml:space="preserve">
    <value>8) 珍珠的偏移 : </value>
  </data>
  <data name="Setting8" xml:space="preserve">
    <value>9) 紅色TNT的预设膛室落点 : </value>
  </data>
  <data name="Setting9" xml:space="preserve">
    <value>10) 蓝色TNT的预设膛室落点 : </value>
  </data>
  <data name="SettingHeader" xml:space="preserve">
    <value>以下是此软件所产生的设定。</value>
  </data>
  <data name="SouthEastTNT" xml:space="preserve">
    <value>请输入东南方TNT的座标 : </value>
  </data>
  <data name="SouthEastTNTParameter" xml:space="preserve">
    <value>东南方TNT的座标</value>
  </data>
  <data name="SouthWestTNT" xml:space="preserve">
    <value>请输入西南方TNT的座标 : </value>
  </data>
  <data name="SouthWestTNTParameter" xml:space="preserve">
    <value>西南方TNT的座标</value>
  </data>
  <data name="StartPressKey" xml:space="preserve">
    <value>如果您已经了解此风险且仍然想要继续使用此软件，请按下任意键。</value>
  </data>
  <data name="Statement0" xml:space="preserve">
    <value>一旦TNT进入炮膛后，</value>
  </data>
  <data name="Statement1" xml:space="preserve">
    <value>请不要使用任何东西改变TNT的位置，</value>
  </data>
  <data name="Statement2" xml:space="preserve">
    <value>让TNT自由下落至炮膛中并记住其位置，</value>
  </data>
  <data name="Statement3" xml:space="preserve">
    <value>然后输入与之对应的英文字母。</value>
  </data>
  <data name="Statement4" xml:space="preserve">
    <value>例如TNT掉入炮膛的东南角落，</value>
  </data>
  <data name="Statement5" xml:space="preserve">
    <value>其对应的英文字母为D。</value>
  </data>
  <data name="StatementHeader" xml:space="preserve">
    <value>请详阅以下内容并理解它。</value>
  </data>
  <data name="TNTSymbol" xml:space="preserve">
    <value>请输入珍珠炮红色阵列复制出来的TNT进入炮膛内的落点的对应英文字母 : </value>
  </data>
  <data name="TNTSymbolParameter" xml:space="preserve">
    <value>珍珠炮红色阵列复制出来的TNT于炮膛内的落点的对应英文字母</value>
  </data>
  <data name="Translate" xml:space="preserve">
    <value>翻译 : LegendsOfSky(通称 : 圣天) , JustDoItWE</value>
  </data>
  <data name="UnexpectedResponseJson" xml:space="preserve">
    <value>非预期的回复，请问您是否希望将此设定保存为settings.json？ (Y/N)</value>
  </data>
  <data name="UnexpectedResponseSettings" xml:space="preserve">
    <value>非预期的回复，请确认以上数值是否正确。 (Y/N)</value>
  </data>
  <data name="Welcome" xml:space="preserve">
    <value>欢迎使用珍珠计算器设定档生成器。</value>
  </data>
  <data name="WrongFormat" xml:space="preserve">
    <value>错误格式，请重新输入以下参数。</value>
  </data>
</root>