<Window xmlns="https://github.com/avaloniaui"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:vm="using:PearlCalculatorCP.ViewModels"
        xmlns:views="using:PearlCalculatorCP.Views"
        xmlns:converters="using:PearlCalculatorCP.Converters"
        xmlns:libWorld="clr-namespace:PearlCalculatorLib.PearlCalculationLib.World;assembly=PearlCalculatorLib"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:i18n="clr-namespace:PearlCalculatorCP.Localizer"
        xmlns:panels="clr-namespace:PearlCalculatorCP.Views.Panels"
        mc:Ignorable="d" 
        d:DesignWidth="{Binding WindowSize.Width}" 
        d:DesignHeight="{Binding WindowSize.Height}"
        CanResize="False"
        x:Class="PearlCalculatorCP.Views.MainWindow"
        Icon="/Assets/Enderperl-icon32.ico"
        Title="PearlCalculator"
        Width="{Binding WindowSize.Width}"
        Height="{Binding WindowSize.Height}"
        Tapped="Window_OnTapped">

    <Window.Resources>
        <converters:IsCheckedFormEnum x:Key="IsCheckedFormEnum" />
    </Window.Resources>

    <!--Styles define-->
    <Window.Styles>
        
        <StyleInclude Source="avares://PearlCalculatorCP/Styles/FluentButtonStyle.axaml" />
        <StyleInclude Source="avares://PearlCalculatorCP/Styles/FluentNumericUpDownStyle.axaml" />
        <StyleInclude Source="avares://PearlCalculatorCP/Styles/GlobalStyles.axaml" />
        <StyleInclude Source="avares://PearlCalculatorCP/Styles/IconButtonStyle.axaml" />

        <Style Selector="TabItem">
            <Setter Property="FontSize" Value="16" />
            <Setter Property="Height" Value="20" />
            <Setter Property="Margin" Value="0" />
        </Style>
        

        <Style Selector="TextBlock.InputBoxTB">
            <Setter Property="FontSize" Value="14" />
            <Setter Property="Margin" Value="2,2,2,4" />
        </Style>

        <Style Selector="GridSplitter">
            <Setter Property="Foreground" Value="#F0F0F0" />
            <Setter Property="Background" Value="#F0F0F0" />
            <Setter Property="Width" Value="2" />
            <Setter Property="MinWidth" Value="1" />
        </Style>
        

        <Style Selector="TextBlock.ResultListTBPadding">
            <Setter Property="Padding" Value="5, 2" />
        </Style>

        <!--Tooltip Styles-->

        <Style Selector="ToolTip">
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="BorderBrush" Value="Transparent" />
        </Style>


        <Style Selector="Border.ToolTipContentBorder">
            <Setter Property="Background" Value="{DynamicResource ToolTipBackground}" />
            <Setter Property="BorderBrush" Value="{DynamicResource ToolTipBorderBrush}" />
            <Setter Property="Padding" Value="2" />
        </Style>

        <!--End-->

    </Window.Styles>

    <Design.DataContext>
        <vm:MainWindowViewModel />
    </Design.DataContext>

    <LayoutTransformControl>
        <LayoutTransformControl.LayoutTransform>
            <ScaleTransform ScaleX="{Binding WindowScale}" 
                            ScaleY="{Binding WindowScale}" />
        </LayoutTransformControl.LayoutTransform>

        <Grid ColumnDefinitions="*, *">

            <Grid Column="0" ColumnDefinitions="*, Auto" RowDefinitions="Auto, *">
                <TabControl Grid.Row="0" Grid.RowSpan="2" Grid.Column="0" Grid.ColumnSpan="2">

                    <!--General FTL Group-->
                    <TabItem Header="{i18n:Translate GeneralFTLHeader, Fallback='General FTL'}">

                        <Border Classes="GlobalGeneralBorder" Margin="0, 5" Padding="4,0">

                            <TabControl>

                                <!--General-->
                                <TabItem Header="{i18n:Translate GeneralFTLGeneralHeader, Fallback='General'}">

                                    <Grid RowDefinitions="*, Auto">

                                        <Grid Grid.Row="0" DockPanel.Dock="Top" RowDefinitions="*,*,*,*,*,0.7*,*,*">

                                            <StackPanel Grid.Row="0">
                                                <TextBlock Text="{i18n:Translate PearlPosX, Fallback='Pearl X :'}" Classes="InputBoxTB" />
                                                <NumericUpDown Value="{Binding PearlPosX}" />
                                            </StackPanel>

                                            <StackPanel Grid.Row="1">
                                                <TextBlock Text="{i18n:Translate PearlPosZ, Fallback='Pearl Z :'}" Classes="InputBoxTB" />
                                                <NumericUpDown Value="{Binding PearlPosZ}" />
                                            </StackPanel>

                                            <StackPanel Grid.Row="2">
                                                <StackPanel>
                                                    <TextBlock Text="{i18n:Translate DestinationX, Fallback='Destination X :'}" Classes="InputBoxTB" />
                                                    <NumericUpDown Value="{Binding DestinationX}" />
                                                </StackPanel>
                                            </StackPanel>

                                            <StackPanel Grid.Row="3">
                                                <TextBlock Text="{i18n:Translate DestinationZ, Fallback='Destination Z :'}" Classes="InputBoxTB" />
                                                <NumericUpDown Value="{Binding DestinationZ}" />
                                            </StackPanel>

                                            <StackPanel Grid.Row="4">
                                                <TextBlock Text="{i18n:Translate MaxTNT, Fallback='Max TNT :'}" Classes="InputBoxTB" />
                                                <NumericUpDown Value="{Binding MaxTNT}" ValueChanged="NumericUpDownToUInt_OnValueChanged" />
                                            </StackPanel>

                                            <Border Grid.Row="5" Margin="12,0,12,0">
                                                <StackPanel Orientation="Horizontal" Spacing="60" VerticalAlignment="Center">
                                                    <RadioButton IsChecked="{Binding Direction, Converter={StaticResource IsCheckedFormEnum}, ConverterParameter={x:Static libWorld:Direction.North}}" Content="North" GroupName="DirectionSelectGroup" Name="NorthRB" />
                                                    <RadioButton IsChecked="{Binding Direction, Converter={StaticResource IsCheckedFormEnum}, ConverterParameter={x:Static libWorld:Direction.South}}" Content="South" GroupName="DirectionSelectGroup" Name="SouthRB" />
                                                    <RadioButton IsChecked="{Binding Direction, Converter={StaticResource IsCheckedFormEnum}, ConverterParameter={x:Static libWorld:Direction.East}}" Content="East" GroupName="DirectionSelectGroup" Name="EastRB" />
                                                    <RadioButton IsChecked="{Binding Direction, Converter={StaticResource IsCheckedFormEnum}, ConverterParameter={x:Static libWorld:Direction.West}}" Content="West" GroupName="DirectionSelectGroup" Name="WestRB" />
                                                </StackPanel>
                                            </Border>

                                            <StackPanel Grid.Row="6">
                                                <TextBlock Text="{i18n:Translate RedTNT, Fallback='Red TNT :'}" Classes="InputBoxTB" />
                                                <NumericUpDown Value="{Binding RedTNT}" ValueChanged="NumericUpDownToUInt_OnValueChanged" />
                                            </StackPanel>

                                            <StackPanel Grid.Row="7">
                                                <TextBlock Text="{i18n:Translate BlueTNT, Fallback='Blue TNT :'}" Classes="InputBoxTB" />
                                                <NumericUpDown Value="{Binding BlueTNT}" ValueChanged="NumericUpDownToUInt_OnValueChanged" />
                                            </StackPanel>

                                        </Grid>

                                        <StackPanel Grid.Row="1" DockPanel.Dock="Bottom" Spacing="2" Margin="0,4">
                                            <Button Classes="GeneralButtonStyle" Content="{i18n:Translate CalculateTNTAmount, Fallback='Calculate TNT Amount'}" Command="{Binding CalculateTNTAmount}" />
                                            <Button Classes="GeneralButtonStyle" Content="{i18n:Translate PearlSimulate, Fallback='Pearl Simulate'}" Command="{Binding PearlSimulate}" />
                                            <Button Classes="GeneralButtonStyle" Content="{i18n:Translate ImportSettings, Fallback='Import Settings'}" Click="ImportSettingsBtn_OnClick" />
                                            <Button Classes="GeneralButtonStyle" Content="{i18n:Translate SaveSettings, Fallback='Save Settings'}" Click="SaveSettingsBtn_OnClick" />
                                        </StackPanel>
                                    </Grid>

                                </TabItem>

                                <!--Advanced-->
                                <TabItem Header="{i18n:Translate GeneralFTLAdvancedHeader, Fallback='Advanced'}">
                                    <panels:Advance />
                                </TabItem>

                                <!--Settings-->
                                <TabItem Header="{i18n:Translate GeneralFTLSettingsHeader, Fallback='Settings'}">
                                    <panels:MoreSettings />
                                </TabItem>

                            </TabControl>

                        </Border>

                    </TabItem>

                    <!--Manually-->
                    <TabItem Header="{i18n:Translate ManuallyHeader, Fallback='Manually'}">
                        <views:Manually />
                    </TabItem>

                </TabControl>

            </Grid>
            

            <Grid Column="1" ColumnDefinitions="*, Auto" RowDefinitions="Auto, *">
                
                <TabControl Grid.Row="0" Grid.Column="0" Grid.RowSpan="2" Grid.ColumnSpan="2">
                    <!--Result Display-->
                    <TabItem Header="{i18n:Translate DisplayHeader, Fallback='Display'}">
                        <panels:ResultPanel Margin="0,5" />
                    </TabItem>

                    <!--Console-->
                    <TabItem Header="{i18n:Translate ConsoleHeader, Fallback='Console'}">
                        <panels:ConsolePanel Margin="0, 5" />
                    </TabItem>

                </TabControl>
                
                <Button Grid.Row="0" Grid.Column="1" Margin="8, 12" Name="AppSettingsBtn" Classes="IconButton" Click="AppSettingsBtn_OnClick">
                    <Button.Content>
                        <Path Stretch="Uniform"
                              Width="16"
                              Height="16"
                              Data="{DynamicResource SettingsIcon}"
                              Fill="{Binding $parent.Foreground}"
                              VerticalAlignment="Center"/>
                    </Button.Content>
                </Button>
            </Grid>
            
            <!--Settings Popup-->
            <Panel Grid.Column="1" Height="0">
                <Popup Name="AppSettingsPopup" PlacementMode="AnchorAndGravity" PlacementTarget="AppSettingsBtn" PlacementGravity="BottomLeft" PlacementAnchor="BottomRight" IsOpen="False" IsLightDismissEnabled="True">
                        
                    <Border BorderThickness="1" CornerRadius="{DynamicResource FluentPopupCornerRadius}" BorderBrush="{DynamicResource CPBorderBrush}" Background="White" Width="{Binding SettingsPopupWidth}">

                        <LayoutTransformControl>
                            
                            <LayoutTransformControl.LayoutTransform>
                                <ScaleTransform ScaleX="{Binding WindowScale}" 
                                                ScaleY="{Binding WindowScale}" />
                            </LayoutTransformControl.LayoutTransform>

                            <Grid RowDefinitions="Auto, 1, *">

                                <Grid Grid.Row="0" ColumnDefinitions="Auto, *" Margin="16, 2">

                                    <TextBlock Grid.Column="0" Text="Settings" VerticalAlignment="Center" />

                                    <Button Grid.Column="1" Margin="4" Classes="IconButton" HorizontalAlignment="Right"
                                            Click="OpenGithubLink">
                                        <Button.Content>
                                            <Path Stretch="Uniform"
                                                  Width="16"
                                                  Height="16"
                                                  Data="{DynamicResource GithubIcon}"
                                                  VerticalAlignment="Center"
                                                  Fill="{Binding $parent.Foreground}" />
                                        </Button.Content>
                                    </Button>

                                </Grid>

                                <Rectangle Grid.Row="1" Fill="{DynamicResource CPBorderBrush}" />

                                <panels:AppSettingsPanel Grid.Row="2"
                                                         OnAboutClick="OpenAboutWindow"
                                                         OnSetDefaultSettingsClick="SetDefaultSettings"/>

                            </Grid>
                        </LayoutTransformControl>
                    </Border>
                </Popup>
            </Panel>

            
        </Grid>
    </LayoutTransformControl>

</Window>